; ------------------------------------------------------------------------
;    _       ___      _______     _       ___     __           __
;   | |     / (_)___ /  / __ \   | |     / (_)___/ /___  ___  / /______
;   | | /| / / / __ \/ / / / /   | | /| / / / __  / __ \/ _ \/ __/ ___/
;   | |/ |/ / / / / / / /_/ /    | |/ |/ / / /_/ / /_/ /  __/ /_(__  ) 
;   |__/|__/_/_/ /_/_/\____/     |__/|__/_/\__,_/\__, /\___/\__/____/
;                                               /____/
;
;	Win10 Widgets for Rainmeter - Spotify (small)
;		Author  - TJ Markham, http://tjmarkham.com
;		Website - http://win10widgets.com
;		Donate  - http://donate.win10widgets.com
;
; ------------------------------------------------------------------------

; Spotify Plug-in Credit: .raptor

; Known bug(s):
; - Sometimes the Spotify plug-in doesn't seem to work. Restarting the 
;	computer and/or Spotify seems to help, but doesn't always work. From 
;	what I can tell this is a side-effect of the Spotify plug-in.
; - Current song position shows :59, then :60 briefly, then 1:00. It 
;	should show :59 and then going straight to 1:00. From what I can 
;	tell this is a side-effect of the Spotify plug-in.
; - Current song position isn't 100% in sync; it's off by ~+0.5 second. 
;	From what I can tell this is a side-effect of the Spotify plug-in.
; - When the artist field has a comma in it, only the text before the 
;	comma is shown. From what I can tell this is a side-effect of the 
;	Spotify plug-in.
; - Long song titles and artist names get cut off with "..." instead of 
;	scrolling when moused over. The current method for performing this 
;	action (letter by letter) is too choppy and therefore was not 
;	implemented.
; - The progress bar sometimes doesn't refresh when Spotify is first 
;	opened, however the bar will return to its normal behavior once the 
;	next song starts or the skin is refreshed. This bug is difficult to 
;	re-produce, and thus difficult to fix. At the time of release, not 
;	sure what the cause is or how it can be fixed.

[Rainmeter]
Update=50
MouseActionCursor=0
; Context menu option to show remaining time/length.
ContextTitle="Show remaining time/length"
ContextAction=[!WriteKeyValue MeterTime Group SpotifyOn #CoreFilePath#][!WriteKeyValue MeterTimeOff Group SpotifyOff #CoreFilePath#][!WriteKeyValue MeasurePosition Disabled 0 #CoreFilePath#][!WriteKeyValue MeasureLength Disabled 0 #CoreFilePath#][!Refresh]
; Context menu option to hide remaining time/length.
ContextTitle2="Hide remaining time/length"
ContextAction2=[!WriteKeyValue MeterTime Hidden 1 #CoreFilePath#][!WriteKeyValue MeterTimeOff Hidden 1 #CoreFilePath#][!WriteKeyValue MeterTime Group "" #CoreFilePath#][!WriteKeyValue MeterTimeOff Group "" #CoreFilePath#][!WriteKeyValue MeasurePosition Disabled 1 #CoreFilePath#][!WriteKeyValue MeasureLength Disabled 1 #CoreFilePath#][!Refresh]

[Metadata]
Name=Spotify (small)
Author=TJ Markham
Information=Displays Spotify info and controls.
License=Creative Commons BY-NC-SA 4.0
Version=1.0.0

[Variables]
@Include1=#@#variables.ini
@Include2=#@#styles.ini
@Include3=#@#background.ini
CoreFilePath=""#CURRENTPATH#Spotify-Small.ini""
BackgroundHeight=58
BarColor=#SpotifyGreen#
HovorColor=#SolidWhite#
HovorColor2=#SpotifyGreen#
ClickColor=#SolidGreyPause#
LeftPadding=60
AutoBorder=1


; ------------------------------------------------------------------------
; MEASURES
; ------------------------------------------------------------------------

[MeasurePlayer]
; Allows widget to control playback of the currently playing Spotify track (play/pause, next, previous, etc.).
; Determines if Spotify is running or not and shows/hides corresponding meters.
Measure=Plugin
Plugin=NowPlaying
PlayerName=Spotify
PlayerType=Status
IfCondition=(MeasurePlayer=1)
IfTrueAction=[!EnableMeasureGroup SpotifyMeasures][!ShowMeterGroup SpotifyOn][!HideMeterGroup SpotifyOff][!UpdateMeter MeterCover]
IfFalseAction=[!DisableMeasureGroup SpotifyMeasures][!ShowMeterGroup SpotifyOff][!HideMeterGroup SpotifyOn][!HideMeterGroup Pause][!ShowMeterGroup Play]
UpdateDivider=20

[MeasureCover]
; Returns cover image of currently playing Spotify track.
Measure=Plugin
Plugin=SpotifyPlugin
Type=AlbumArt
Group=SpotifyMeasures
;Res: 60, 85, 120, 300 or 640. Defaults to 300.
;Res=60
Res=640
CoverPath=Cover.png
OnChangeAction=[!UpdateMeter MeterCover]
UpdateDivider=5

[MeasurePlaying]
; Returns playing status of currently playing Spotify track.
Measure=Plugin
Plugin=SpotifyPlugin
Type=Playing
Group=SpotifyMeasures
IfCondition=(MeasurePlaying=1)
IfTrueAction=[!SetVariable HovorColor #SolidWhite#][!SetVariable HovorColor2 #SpotifyGreen#][!SetVariable ClickColor #SolidGreyPause#][!ShowMeterGroup Pause][!HideMeterGroup Play]
IfFalseAction=[!SetVariable HovorColor #SpotifyGreen#][!SetVariable HovorColor2 #SolidWhite#][!SetVariable ClickColor #SpotifyGreen#][!HideMeterGroup Pause][!ShowMeterGroup Play]
OnChangeAction=[!UpdateMeter PlayPauseCircle]
UpdateDivider=5

[MeasurePosition]
; Returns position of currently playing Spotify track.
Measure=Plugin
Plugin=SpotifyPlugin
Type=Position
Group=SpotifyMeasures
Substitute="^0":"","^:":"0:"
RegExpSubstitute=1
OnChangeAction=[!UpdateMeter MeterTime][!UpdateMeter MeterArtist]
UpdateDivider=5
Disabled=0

[MeasureLength]
; Returns length of currently playing Spotify track.
Measure=Plugin
Plugin=SpotifyPlugin
Type=Length
Group=SpotifyMeasures
Substitute="^0":"","^:":"0:"
RegExpSubstitute=1
OnChangeAction=[!UpdateMeter MeterTime]
UpdateDivider=5
Disabled=0

[MeasureProgress]
; Returns progress of currently playing Spotify track.
Measure=Plugin
Plugin=SpotifyPlugin
Type=Progress
Group=SpotifyMeasures
OnChangeAction=[!UpdateMeter MeterBar]
UpdateDivider=5

[MeasureTrack]
; Returns name of currently playing Spotify track.
Measure=Plugin
Plugin=SpotifyPlugin
Type=TrackName
Group=SpotifyMeasures
Substitute="":"Error: Spotify Plugin"
OnChangeAction=[!UpdateMeter MeterTrack]
UpdateDivider=5

[MeasureArtist]
; Returns artist of currently playing Spotify track
Measure=Plugin
Plugin=SpotifyPlugin
Type=ArtistName
Group=SpotifyMeasures
Substitute="":"not working"
OnChangeAction=[!UpdateMeter MeterArtist]
UpdateDivider=5


; ------------------------------------------------------------------------
; METERS - Previous Track
; ------------------------------------------------------------------------

; The meters below form the "previous" button/icon.

[PreviousButton]
; Goes to previous Spotify track when clicked.
Meter=Image
X=#LeftPadding#
Y=(#BackgroundHeight#-42)
W=21
H=22
SolidColor=#Transparent#
Group=SpotifyOn
LeftMouseUpAction=[!CommandMeasure MeasurePlayer "Previous"]
UpdateDivider=-1

[PreviousBar]
Meter=Image
X=5r
Y=5r
W=3
H=12
SolidColor=#SolidWhite#
UpdateDivider=-1

[PreviousLine1]
Meter=Image
X=10r
Y=[PreviousBar:Y]
W=1
H=12
SolidColor=#SolidWhite#
UpdateDivider=-1

[PreviousLine2]
Meter=Image
X=-2r
Y=1r
W=2
H=10
SolidColor=#SolidWhite#
UpdateDivider=-1

[PreviousLine3]
Meter=Image
X=-1r
Y=1r
W=1
H=8
SolidColor=#SolidWhite#
UpdateDivider=-1

[PreviousLine4]
Meter=Image
X=-2r
Y=1r
W=2
H=6
SolidColor=#SolidWhite#
UpdateDivider=-1

[PreviousLine5]
Meter=Image
X=-1r
Y=1r
W=1
H=4
SolidColor=#SolidWhite#
UpdateDivider=-1

[PreviousLine6]
Meter=Image
X=-1r
Y=1r
W=1
H=2
SolidColor=#SolidWhite# 
UpdateDivider=-1

[PreviousDiagonalTop]
Meter=Image
X=([PreviousBar:X]+10)
Y=[PreviousBar:Y]
W=1
H=10
SolidColor=#SolidWhite#
AntiAlias=1
TransformationMatrix=(Cos(Rad(-58)));(-Sin(Rad(-58)));(Sin(Rad(-58)));(Cos(Rad(-58)));([PreviousDiagonalTop:X]-[PreviousDiagonalTop:X]*Cos(Rad(-58))-[PreviousDiagonalTop:Y]*Sin(Rad(-58)));([PreviousDiagonalTop:Y]-[PreviousDiagonalTop:X]*(-Sin(Rad(-58)))-[PreviousDiagonalTop:Y]*Cos(Rad(-58)))
UpdateDivider=-1

[PreviousDiagonalBottom]
Meter=Image
X=([PreviousBar:X]+11)
Y=([PreviousBar:Y]+10)
W=2
H=10
SolidColor=#SolidWhite#
AntiAlias=1
TransformationMatrix=(Cos(Rad(-122)));(-Sin(Rad(-122)));(Sin(Rad(-122)));(Cos(Rad(-122)));([PreviousDiagonalBottom:X]-[PreviousDiagonalBottom:X]*Cos(Rad(-122))-[PreviousDiagonalBottom:Y]*Sin(Rad(-122)));([PreviousDiagonalBottom:Y]-[PreviousDiagonalBottom:X]*(-Sin(Rad(-122)))-[PreviousDiagonalBottom:Y]*Cos(Rad(-122)))
UpdateDivider=-1


; ------------------------------------------------------------------------
; METERS - Play/Pause Circle
; ------------------------------------------------------------------------

[PlayPauseCircle]
; Shows the circle of the play/pause button when Spotify is open.
; Acts as play/pause button; plays/pauses current Spotify track when clicked.
Meter=Roundline
X=([PreviousButton:X]+30)
Y=([PreviousButton:Y]-5)
H=32
W=32
AntiAlias=1
Group=SpotifyOn
RotationAngle=(Rad(360))
LineStart=16
LineLength=14.8
LineColor=#SolidGreyText#
Solid=1
LeftMouseDownAction=[!SetOption PlayPauseCircle LineColor #ClickColor#][!UpdateMeter PlayPauseCircle]
LeftMouseUpAction=[!CommandMeasure MeasurePlayer "PlayPause"][!SetOption PlayPauseCircle LineColor #HovorColor2#][!UpdateMeter PlayPauseCircle]
MouseOverAction=[!SetOption PlayPauseCircle LineColor #HovorColor#][!UpdateMeter PlayPauseCircle]
MouseLeaveAction=[!SetOption PlayPauseCircle LineColor #SolidGreyText#][!UpdateMeter PlayPauseCircle]
DynamicVariables=1
UpdateDivider=-1

[PlayPauseCircleOff]
; Shows the circle of the play/pause button when Spotify is closed.
Meter=Roundline
X=[PlayPauseCircle:X]
Y=[PlayPauseCircle:Y]
H=[PlayPauseCircle:H]
W=[PlayPauseCircle:W]
AntiAlias=1
Group=SpotifyOff
RotationAngle=(Rad(360))
LineStart=16
LineLength=14.8
LineColor=#SolidGreyText#
Solid=1
UpdateDivider=-1


; ------------------------------------------------------------------------
; METERS - Play Icon
; ------------------------------------------------------------------------

; The meters below form the "play" icon.

[PlayLine1]
Meter=Image
X=([PlayPauseCircle:X]+9)
Y=([PlayPauseCircle:Y]+8)
W=1
H=16
SolidColor=#SolidWhite#
Group=Play
UpdateDivider=-1

[PlayLine2]
Meter=Image
X=0R
Y=0r
W=1
H=17
SolidColor=#SolidWhite#
Group=Play
UpdateDivider=-1

[PlayLine3]
Meter=Image
X=0R
Y=0r
W=1
H=16
SolidColor=#SolidWhite#
Group=Play
UpdateDivider=-1

[PlayLine4]
Meter=Image
X=0R
Y=1r
W=1
H=15
SolidColor=#SolidWhite#
Group=Play
UpdateDivider=-1

[PlayLine5]
Meter=Image
X=0R
Y=0r
W=1
H=14
SolidColor=#SolidWhite#
Group=Play
UpdateDivider=-1

[PlayLine6]
Meter=Image
X=0R
Y=1r
W=1
H=12
SolidColor=#SolidWhite#
Group=Play
UpdateDivider=-1

[PlayLine7]
Meter=Image
X=0R
Y=1r
W=1
H=11
SolidColor=#SolidWhite#
Group=Play
UpdateDivider=-1

[PlayLine8]
Meter=Image
X=0R
Y=0r
W=1
H=10
SolidColor=#SolidWhite#
Group=Play
UpdateDivider=-1

[PlayLine9]
Meter=Image
X=0R
Y=1r
W=1
H=8
SolidColor=#SolidWhite#
Group=Play
UpdateDivider=-1

[PlayLine10]
Meter=Image
X=0R
Y=1r
W=1
H=7
SolidColor=#SolidWhite#
Group=Play
UpdateDivider=-1

[PlayLine11]
Meter=Image
X=0R
Y=0r
W=1
H=6
SolidColor=#SolidWhite#
Group=Play
UpdateDivider=-1

[PlayLine12]
Meter=Image
X=0R
Y=1r
W=1
H=5
SolidColor=#SolidWhite#
Group=Play
UpdateDivider=-1

[PlayLine13]
Meter=Image
X=0R
Y=0r
W=1
H=4
SolidColor=#SolidWhite#
Group=Play
UpdateDivider=-1

[PlayLine14]
Meter=Image
X=0R
Y=1r
W=1
H=2
SolidColor=#SolidWhite#
Group=Play
UpdateDivider=-1

[PlayLine15]
Meter=Image
X=[PlayLine1:X]
Y=([PlayLine1:Y]-1)
W=1
H=1
SolidColor=127,131,137
Group=Play
UpdateDivider=-1

[PlayDiagonalTop]
Meter=Image
X=([PlayLine1:X]+1)
Y=[PlayLine1:Y]
W=1
H=16
SolidColor=#SolidWhite#
AntiAlias=1
TransformationMatrix=(Cos(Rad(58)));(-Sin(Rad(58)));(Sin(Rad(58)));(Cos(Rad(58)));([PlayDiagonalTop:X]-[PlayDiagonalTop:X]*Cos(Rad(58))-[PlayDiagonalTop:Y]*Sin(Rad(58)));([PlayDiagonalTop:Y]-[PlayDiagonalTop:X]*(-Sin(Rad(58)))-[PlayDiagonalTop:Y]*Cos(Rad(58)))
Group=Play
UpdateDivider=-1

[PlayDiagonalBottom]
Meter=Image
X=([PlayLine1:X]+14)
Y=([PlayLine1:Y]+7)
W=2
H=17
SolidColor=#SolidWhite#
AntiAlias=1
TransformationMatrix=(Cos(Rad(-58)));(-Sin(Rad(-58)));(Sin(Rad(-58)));(Cos(Rad(-58)));([PlayDiagonalBottom:X]-[PlayDiagonalBottom:X]*Cos(Rad(-58))-[PlayDiagonalBottom:Y]*Sin(Rad(-58)));([PlayDiagonalBottom:Y]-[PlayDiagonalBottom:X]*(-Sin(Rad(-58)))-[PlayDiagonalBottom:Y]*Cos(Rad(-58)))
Group=Play
UpdateDivider=-1


; ------------------------------------------------------------------------
; METERS - Pause Icon
; ------------------------------------------------------------------------

; The meters below form the "pause" icon.

[PauseLine1]
Meter=Image
X=([PlayPauseCircle:X]+9)
Y=([PlayPauseCircle:Y]+9)
W=4
H=14
SolidColor=#SolidWhite#
Group=Pause
UpdateDivider=-1

[PauseLine1CapTop]
Meter=Roundline
X=2r
Y=0r
AntiAlias=1
Group=Pause
LineLength=2
LineColor=#SolidWhite#
Solid=1
UpdateDivider=-1

[PauseLine1CapBottom]
Meter=Roundline
X=0r
Y=14r
AntiAlias=1
LineLength=2
Group=Pause
LineColor=#SolidWhite#
Solid=1
UpdateDivider=-1

[PauseLine2]
Meter=Image
X=([PauseLine1:X]+10)
Y=[PauseLine1:Y]
W=4
H=14
SolidColor=#SolidWhite#
Group=Pause
UpdateDivider=-1

[PauseLine2CapTop]
Meter=Roundline
X=2r
Y=0r
AntiAlias=1
Group=Pause
LineLength=2
LineColor=#SolidWhite#
Solid=1
UpdateDivider=-1

[PauseLine2CapBottom]
Meter=Roundline
X=0r
Y=14r
AntiAlias=1
Group=Pause
LineLength=2
LineColor=#SolidWhite#
Solid=1
UpdateDivider=-1


; ------------------------------------------------------------------------
; METERS - Next Track
; ------------------------------------------------------------------------

; The meters below form the "next" button/icon.

[NextButton]
; Goes to next Spotify track when clicked.
Meter=Image
X=([PlayPauseCircle:X]+41)
Y=([PlayPauseCircle:Y]+5)
W=21
H=22
SolidColor=#Transparent#
Group=SpotifyOn
LeftMouseUpAction=[!CommandMeasure MeasurePlayer "Next"]
UpdateDivider=-1

[NextBar]
Meter=Image
X=13r
Y=5r
W=3
H=12
SolidColor=#SolidWhite#
UpdateDivider=-1

[NextLine1]
Meter=Image
X=-8r
Y=[NextBar:Y]
W=1
H=12
SolidColor=#SolidWhite#
UpdateDivider=-1

[NextLine2]
Meter=Image
X=1r
Y=1r
W=2
H=10
SolidColor=#SolidWhite#
UpdateDivider=-1

[NextLine3]
Meter=Image
X=2r
Y=1r
W=1
H=8
SolidColor=#SolidWhite#
UpdateDivider=-1

[NextLine4]
Meter=Image
X=1r
Y=1r
W=2
H=6
SolidColor=#SolidWhite#
UpdateDivider=-1

[NextLine5]
Meter=Image
X=2r
Y=1r
W=1
H=4
SolidColor=#SolidWhite#
UpdateDivider=-1

[NextLine6]
Meter=Image
X=1r
Y=1r
W=1
H=2
SolidColor=#SolidWhite# 
UpdateDivider=-1

[NextDiagonalTop]
Meter=Image
X=([NextButton:X]+6)
Y=([NextButton:Y]+6)
W=1
H=8
SolidColor=#SolidWhite#
AntiAlias=1
TransformationMatrix=(Cos(Rad(58)));(-Sin(Rad(58)));(Sin(Rad(58)));(Cos(Rad(58)));([NextDiagonalTop:X]-[NextDiagonalTop:X]*Cos(Rad(58))-[NextDiagonalTop:Y]*Sin(Rad(58)));([NextDiagonalTop:Y]-[NextDiagonalTop:X]*(-Sin(Rad(58)))-[NextDiagonalTop:Y]*Cos(Rad(58)))
UpdateDivider=-1

[NextDiagonalBottom]
Meter=Image
X=([NextButton:X]+13)
Y=([NextButton:Y]+11)
W=1
H=9
SolidColor=#SolidWhite#
AntiAlias=1
TransformationMatrix=(Cos(Rad(302)));(-Sin(Rad(302)));(Sin(Rad(302)));(Cos(Rad(302)));([NextDiagonalBottom:X]-[NextDiagonalBottom:X]*Cos(Rad(302))-[NextDiagonalBottom:Y]*Sin(Rad(302)));([NextDiagonalBottom:Y]-[NextDiagonalBottom:X]*(-Sin(Rad(302)))-[NextDiagonalBottom:Y]*Cos(Rad(302)))
UpdateDivider=-1


; ------------------------------------------------------------------------
; METERS - Cover
; ------------------------------------------------------------------------

[MeterDefaultCoverBackground]
; Shows the default cover background (for when a cover is not available or Spotify is closed).
; Opens Spotify when clicked.
Meter=Image
X=1
Y=2
W=50
H=[MeterDefaultCoverBackground:W]
SolidColor=#SpotifyBackground#
LeftMouseUpAction=[!CommandMeasure MeasurePlayer OpenPlayer]
MouseActionCursor=1
UpdateDivider=-1

[MeterDefaultCoverForeground]
; Shows the default cover foreground; i.e. a gray CD (for when a cover is not available or Spotify is closed).
Meter=Roundline
X=26
Y=([MeterDefaultCoverForeground:X]+1)
AntiAlias=1
RotationAngle=(Rad(360))
LineStart=18.8
LineLength=6
LineColor=#SpotifyForeground#
Solid=1
UpdateDivider=-1

[MeterCover]
; Shows cover image of currently playing Spotify track.
Meter=Image
ImageName=[MeasureCover]
X=1
Y=2
W=[MeterDefaultCoverBackground:W]
H=[MeterCover:W]
DynamicVariables=1
AntiAlias=1
Group=SpotifyOn
UpdateDivider=-1


; ------------------------------------------------------------------------
; METERS - Bar
; ------------------------------------------------------------------------

[MeterBar]
; Shows a bar that represents progress of currently playing Spotify track.
Meter=Bar
MeasureName=MeasureProgress
X=1
Y=(#BackgroundHeight#-5)
W=(#BackgroundWidth#-2)
H=4
SolidColor=#SolidGreyIcon#
Group=SpotifyOn
BarColor=#BarColor#
BarOrientation=Horizontal
UpdateDivider=-1

[MeterBarOff]
; Shows green bar when Spotify is closed.
Meter=Image
X=[MeterBar:X]
Y=[MeterBar:Y]
W=[MeterBar:W]
H=[MeterBar:H]
SolidColor=#BarColor#
Group=SpotifyOff
UpdateDivider=-1


; ------------------------------------------------------------------------
; METERS - Text
; ------------------------------------------------------------------------

[MeterTime]
; Shows position and length of currently playing Spotify track.
Meter=String
MeterStyle=StyleTinyTextSpotify
MeasureName=MeasurePosition
MeasureName2=MeasureLength
X=(#BackgroundWidth#-4)
Y=([MeterBar:Y]-18)
Group=SpotifyOn
Text="%1 / %2"
UpdateDivider=-1
Hidden=1

[MeterTimeOff]
; Shows "0:00 / 0:00" when Spotify is closed.
Meter=String
MeterStyle=StyleTinyTextSpotify
X=(#BackgroundWidth#-4)
Y=[MeterTime:Y]
Group=SpotifyOff
Text="0:00 / 0:00"
UpdateDivider=-1
Hidden=1

[MeterTrack]
; Shows name of currently playing Spotify track.
Meter=String
MeterStyle=StyleSmallTextSpotify
MeasureName=MeasureTrack
X=([NextBar:X]+16)
Y=(#BackgroundHeight#-49)
ClipString=2
ClipStringW=(#BackgroundWidth#-[MeterTrack:X]-9)
Group=SpotifyOn
Text="%1"
FontFace=Segoe UI Semibold
UpdateDivider=-1

[MeterArtist]
; Shows artist of currently playing Spotify track.
Meter=String
MeterStyle=StyleSmallTextSpotify
MeasureName=MeasureArtist
X=0r
Y=-2R
ClipString=2
ClipStringW=(#BackgroundWidth#-[MeterArtist:X]-[MeterTime:W]-8)
Group=SpotifyOn
Text="%1"
DynamicVariables=1
UpdateDivider=-1

[MeterTrackOff]
; Shows "Track" when Spotify is closed.
Meter=String
MeterStyle=StyleSmallTextSpotify
X=[MeterTrack:X]
Y=[MeterTrack:Y]
Group=SpotifyOff
Text="Track"
FontFace=Segoe UI Semibold
UpdateDivider=-1

[MeterArtistOff]
; Shows "Artist" when Spotify is closed.
Meter=String
MeterStyle=StyleSmallTextSpotify
X=0r
Y=-2R
Group=SpotifyOff
Text="Artist"
UpdateDivider=-1
